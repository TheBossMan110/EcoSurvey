@using EcoSurvey.Models
@model CompetitionSubmissionViewModel
@{
    ViewData["Title"] = "Environmental Quiz Competition";
    var competition = ViewBag.Competition as Competition;
    var questions = ViewBag.Questions as List<Question>;
}

<main class="container mx-auto px-4 py-8 min-h-[calc(100vh-180px)]">
    <!-- Registration Section -->
    <div id="registration-container" class="max-w-3xl mx-auto bg-white rounded-lg shadow-md p-8">
        <div class="text-center mb-8">
            <h2 class="text-3xl font-bold text-gray-800 mb-4">Environmental Quiz Competition</h2>
            <div class="w-20 h-1 bg-primary mx-auto mb-6"></div>
            <p class="text-gray-600 mb-4">
                Test your knowledge about environmental issues and sustainability in this exciting competition!
            </p>
            <div class="flex justify-center mb-6">
                <div class="w-10 h-10 flex items-center justify-center rounded-full bg-primary/10 text-primary mx-2">
                    <i class="ri-earth-line ri-lg"></i>
                </div>
                <div class="w-10 h-10 flex items-center justify-center rounded-full bg-primary/10 text-primary mx-2">
                    <i class="ri-plant-line ri-lg"></i>
                </div>
                <div class="w-10 h-10 flex items-center justify-center rounded-full bg-primary/10 text-primary mx-2">
                    <i class="ri-recycle-line ri-lg"></i>
                </div>
            </div>
        </div>
        <div class="bg-green-50 rounded-lg p-6 mb-8">
            <h3 class="text-xl font-semibold text-gray-800 mb-4">Competition Rules</h3>
            <ul class="space-y-2 text-gray-700">
                <li class="flex items-start">
                    <div class="w-5 h-5 flex items-center justify-center text-primary mt-0.5 mr-2">
                        <i class="ri-checkbox-circle-line"></i>
                    </div>
                    <span>Answer all questions about environmental topics</span>
                </li>
                <li class="flex items-start">
                    <div class="w-5 h-5 flex items-center justify-center text-primary mt-0.5 mr-2">
                        <i class="ri-checkbox-circle-line"></i>
                    </div>
                    <span>The participant with the highest percentage score wins</span>
                </li>
                <li class="flex items-start">
                    <div class="w-5 h-5 flex items-center justify-center text-primary mt-0.5 mr-2">
                        <i class="ri-checkbox-circle-line"></i>
                    </div>
                    <span>Prizes awarded for 1st, 2nd, and 3rd place finishers</span>
                </li>
                <li class="flex items-start">
                    <div class="w-5 h-5 flex items-center justify-center text-primary mt-0.5 mr-2">
                        <i class="ri-checkbox-circle-line"></i>
                    </div>
                    <span>You can see your results immediately after completing the quiz</span>
                </li>
            </ul>
        </div>
        <div class="mb-8">
            <h3 class="text-xl font-semibold text-gray-800 mb-4">Prizes</h3>
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div class="bg-white border border-gray-200 rounded-lg p-4 text-center shadow-sm">
                    <div class="medal gold mx-auto mb-2">1</div>
                    <h4 class="font-semibold text-gray-800">1st Place</h4>
                    <p class="text-sm text-gray-600">Eco-friendly Gift Set</p>
                </div>
                <div class="bg-white border border-gray-200 rounded-lg p-4 text-center shadow-sm">
                    <div class="medal silver mx-auto mb-2">2</div>
                    <h4 class="font-semibold text-gray-800">2nd Place</h4>
                    <p class="text-sm text-gray-600">Reusable Water Bottle</p>
                </div>
                <div class="bg-white border border-gray-200 rounded-lg p-4 text-center shadow-sm">
                    <div class="medal bronze mx-auto mb-2">3</div>
                    <h4 class="font-semibold text-gray-800">3rd Place</h4>
                    <p class="text-sm text-gray-600">Organic Seed Kit</p>
                </div>
            </div>
        </div>

        <!-- Registration Form -->
        <div class="bg-white rounded-lg p-8 border border-gray-200 shadow-sm">
            <h3 class="text-xl font-semibold text-gray-800 mb-6 text-center">Register & Start</h3>
            <form id="registration-form" class="space-y-6 max-w-md mx-auto">
                @if (competition != null)
                {
                    <input type="hidden" id="competition-id" value="@competition.CompetitionId" />
                }

                <div class="space-y-4">
                    <div>
                        <label for="name" class="block text-sm font-medium text-gray-700 mb-1">Full Name</label>
                        <input type="text" id="name" name="Name" required
                               class="w-full px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent transition-colors" />
                    </div>

                    <div>
                        <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email Address</label>
                        <input type="email" id="email" name="Email" required
                               class="w-full px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent transition-colors" />
                    </div>

                    <div class="pt-4">
                        <button type="submit"
                                class="w-full bg-primary text-white py-3 px-6 rounded-md font-medium hover:bg-primary/90 transition-colors flex items-center justify-center">
                            <span>Start Quiz</span>
                            <i class="ri-arrow-right-line ml-2"></i>
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Quiz Section -->
    <div id="quiz-container" class="max-w-3xl mx-auto bg-white rounded-lg shadow-md p-8" style="display: none;">
        <div class="flex justify-between items-center mb-6">
            <h2 class="text-2xl font-bold text-gray-800">Environmental Quiz</h2>
            <div class="flex items-center">
                <span id="question-counter" class="text-sm font-medium text-gray-600 mr-2">Question 1/10</span>
                <div class="w-8 h-8 flex items-center justify-center rounded-full bg-primary/10 text-primary">
                    <i class="ri-question-line"></i>
                </div>
            </div>
        </div>
        <div class="mb-6">
            <div class="progress-bar">
                <div id="progress-fill" class="progress-fill"></div>
            </div>
        </div>
        <div id="question-container" class="mb-8">
            <h3 id="question-text" class="text-xl font-medium text-gray-800 mb-6">
                Question text will appear here
            </h3>
            <div id="options-container" class="space-y-3">
                <!-- Options will be generated here -->
            </div>
        </div>
        <div class="flex justify-between">
            <button id="prev-btn" class="bg-gray-100 text-gray-700 py-2 px-6 rounded-button font-medium hover:bg-gray-200 transition-colors whitespace-nowrap hidden">
                Previous
            </button>
            <div class="flex-grow"></div>
            <button id="next-btn" class="bg-primary text-white py-2 px-6 rounded-button font-medium hover:bg-primary/90 transition-colors whitespace-nowrap">
                Next Question
            </button>
        </div>
    </div>

    <!-- Results Section -->
    <div id="results-container" class="max-w-3xl mx-auto bg-white rounded-lg shadow-md p-8" style="display: none;">
        <div class="text-center mb-8">
            <h2 class="text-3xl font-bold text-gray-800 mb-2">Quiz Results</h2>
            <div class="w-20 h-1 bg-primary mx-auto mb-6"></div>
            <div id="user-score-container" class="mb-6">
                <div class="inline-block rounded-full bg-primary/10 p-6 mb-4">
                    <div id="score-circle" class="relative w-32 h-32 rounded-full border-8 border-primary flex items-center justify-center">
                        <span id="user-score" class="text-4xl font-bold text-gray-800">0%</span>
                    </div>
                </div>
                <h3 id="result-message" class="text-xl font-semibold text-gray-800 mb-2">
                    Great effort!
                </h3>
                <p id="user-rank" class="text-gray-600">
                    Your rank will appear here
                </p>
            </div>
        </div>
        <div class="mb-8">
            <h3 class="text-xl font-semibold text-gray-800 mb-4">Leaderboard</h3>
            <div class="bg-gray-50 rounded-lg p-6">
                <div id="leaderboard-container" class="space-y-4">
                    <!-- Leaderboard entries will be generated here -->
                </div>
            </div>
        </div>
        <div class="flex flex-col sm:flex-row gap-4">
            <button id="retry-btn" class="flex-1 bg-white border border-primary text-primary py-3 px-6 rounded-button font-medium hover:bg-primary/5 transition-colors whitespace-nowrap">
                Try Again
            </button>
            <button id="share-btn" class="flex-1 bg-primary text-white py-3 px-6 rounded-button font-medium hover:bg-primary/90 transition-colors whitespace-nowrap">
                Share Results
            </button>
        </div>

        <!-- Share Modal -->
        <div id="share-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
            <div class="bg-white rounded-lg p-6 max-w-md w-full mx-4">
                <div class="flex justify-between items-center mb-4">
                    <h3 class="text-xl font-semibold text-gray-800">Share Your Results</h3>
                    <button id="close-share-modal" class="text-gray-500 hover:text-gray-700">
                        <i class="ri-close-line ri-lg"></i>
                    </button>
                </div>
                <div class="mb-6">
                    <p class="text-gray-600 mb-2">
                        Your Score: <span id="share-score" class="font-semibold text-gray-800"></span>
                    </p>
                    <p class="text-gray-600 mb-4">
                        Your Rank: <span id="share-rank" class="font-semibold text-gray-800"></span>
                    </p>
                    <textarea id="share-message" class="w-full p-3 border border-gray-300 rounded resize-none focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent" rows="3" placeholder="Add a personal message...">I just completed the Environmental Quiz! Check out my score!</textarea>
                </div>
                <div class="grid grid-cols-2 gap-3">
                    <button id="share-facebook" class="flex items-center justify-center gap-2 bg-[#1877F2] text-white py-2 px-4 rounded-button hover:bg-[#1877F2]/90 transition-colors whitespace-nowrap">
                        <i class="ri-facebook-fill"></i> Facebook
                    </button>
                    <button id="share-twitter" class="flex items-center justify-center gap-2 bg-[#1DA1F2] text-white py-2 px-4 rounded-button hover:bg-[#1DA1F2]/90 transition-colors whitespace-nowrap">
                        <i class="ri-twitter-fill"></i> Twitter
                    </button>
                    <button id="share-instagram" class="flex items-center justify-center gap-2 bg-[#E4405F] text-white py-2 px-4 rounded-button hover:bg-[#E4405F]/90 transition-colors whitespace-nowrap">
                        <i class="ri-instagram-fill"></i> Instagram
                    </button>
                    <button id="share-email" class="flex items-center justify-center gap-2 bg-gray-600 text-white py-2 px-4 rounded-button hover:bg-gray-700 transition-colors whitespace-nowrap">
                        <i class="ri-mail-fill"></i> Email
                    </button>
                </div>
            </div>
        </div>
    </div>
</main>

@section Styles {
    <style>
        /* Keep existing styles */
        .quiz-container {
            display: none;
        }

        .results-container {
            display: none;
        }

        .option-label {
            cursor: pointer;
            transition: all 0.2s ease;
        }

            .option-label:hover {
                background-color: rgba(46, 125, 50, 0.1);
            }

        input[type="radio"] {
            display: none;
        }

            input[type="radio"] + .custom-radio {
                display: inline-block;
                width: 20px;
                height: 20px;
                border: 2px solid #2E7D32;
                border-radius: 50%;
                position: relative;
                margin-right: 10px;
                vertical-align: middle;
            }

            input[type="radio"]:checked + .custom-radio:after {
                content: "";
                position: absolute;
                width: 10px;
                height: 10px;
                background: #2E7D32;
                border-radius: 50%;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
            }

        .progress-bar {
            height: 8px;
            background-color: #e0e0e0;
            border-radius: 4px;
            overflow: hidden;
        }

        .progress-fill {
            height: 100%;
            background-color: #2E7D32;
            width: 0%;
            transition: width 0.3s ease;
        }

        .medal {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-center;
            color: white;
            font-weight: bold;
        }

        .gold {
            background: linear-gradient(145deg, #FFD700, #FFA500);
        }

        .silver {
            background: linear-gradient(145deg, #C0C0C0, #A9A9A9);
        }

        .bronze {
            background: linear-gradient(145deg, #CD7F32, #8B4513);
        }

        /* New improved form styles */
        #registration-form input {
            transition: all 0.3s ease;
        }

            #registration-form input:focus {
                border-color: #2E7D32;
                box-shadow: 0 0 0 2px rgba(46, 125, 50, 0.2);
            }

        #registration-form button {
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

            #registration-form button:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            }
    </style>
}

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Variables
            let currentQuestion = 0;
            let userAnswers = [];
            let userName = "";
            let userEmail = "";
            let competitionId = document.getElementById("competition-id")?.value || 0;

            // DOM Elements
            const registrationContainer = document.getElementById("registration-container");
            const quizContainer = document.getElementById("quiz-container");
            const resultsContainer = document.getElementById("results-container");
            const registrationForm = document.getElementById("registration-form");
            const questionCounter = document.getElementById("question-counter");
            const progressFill = document.getElementById("progress-fill");
            const questionText = document.getElementById("question-text");
            const optionsContainer = document.getElementById("options-container");
            const prevBtn = document.getElementById("prev-btn");
            const nextBtn = document.getElementById("next-btn");
            const userScore = document.getElementById("user-score");
            const resultMessage = document.getElementById("result-message");
            const userRank = document.getElementById("user-rank");
            const leaderboardContainer = document.getElementById("leaderboard-container");
            const retryBtn = document.getElementById("retry-btn");
            const shareBtn = document.getElementById("share-btn");

            // Questions array to store fetched questions
            let questions = [];

            // Event Listeners
            registrationForm.addEventListener("submit", function (e) {
                e.preventDefault();
                userName = document.getElementById("name").value;
                userEmail = document.getElementById("email").value;

                // Initialize questions from the server-rendered data
                initializeQuestions();

                if (questions.length === 0) {
                    alert("No questions available for this quiz. Please try again later.");
                    return;
                }

                // Initialize userAnswers array based on number of questions
                userAnswers = Array(questions.length).fill(null);

                // Hide registration container and show quiz container
                registrationContainer.style.display = "none";
                quizContainer.style.display = "block";

                // Load the first question
                loadQuestion(currentQuestion);
            });

            // Initialize questions from the server-rendered data
            function initializeQuestions() {
        @if (ViewBag.Questions != null)
        {
            <text>
                        questions = [
                @{
                    var questionsList = ViewBag.Questions as List<Question>;
                    for (var i = 0; i < questionsList.Count; i++)
                    {
                        var question = questionsList[i];
                        var options = question.Options?.Split('|') ?? new string[0];
                        <text>
                                            {
                                                questionId: @question.QuestionId,
                                                question: "@Html.Raw(Json.Serialize(question.QuestionText))",
                                                options: [@for (var j = 0; j < options.Length; j++)
                            {
                                <text>"@Html.Raw(Json.Serialize(options[j]))"@(j < options.Length - 1 ? "," : "")</text>
                            }],
                                                correctAnswer: 0 // Assume first option is correct for now
                                            }@(i < questionsList.Count - 1 ? "," : "")
                        </text>
                    }
                }
                        ];
            </text>
        }

                console.log("Loaded questions:", questions);
            }

            prevBtn.addEventListener("click", function () {
                if (currentQuestion > 0) {
                    currentQuestion--;
                    loadQuestion(currentQuestion);
                }
            });

            nextBtn.addEventListener("click", function () {
                const selectedOption = document.querySelector('input[name="option"]:checked');
                if (!selectedOption && nextBtn.textContent !== "Submit Quiz") {
                    alert("Please select an answer before proceeding.");
                    return;
                }

                if (selectedOption) {
                    userAnswers[currentQuestion] = parseInt(selectedOption.value);
                }

                if (currentQuestion < questions.length - 1) {
                    currentQuestion++;
                    loadQuestion(currentQuestion);
                } else if (nextBtn.textContent === "Submit Quiz") {
                    submitQuiz();
                } else {
                    nextBtn.textContent = "Submit Quiz";
                }
            });

            retryBtn.addEventListener("click", function () {
                resetQuiz();
                resultsContainer.style.display = "none";
                registrationContainer.style.display = "block";
            });

            shareBtn.addEventListener("click", function () {
                const score = userScore.textContent;
                const rank = userRank.textContent;

                shareScore.textContent = score;
                shareRank.textContent = rank;
                shareModal.classList.remove("hidden");
                shareModal.classList.add("flex");
            });

            // Functions
            function loadQuestion(index) {
                if (!questions || questions.length === 0 || !questions[index]) {
                    console.error("No questions available or invalid index:", index);
                    return;
                }

                const question = questions[index];
                questionCounter.textContent = `Question ${index + 1}/${questions.length}`;
                progressFill.style.width = `${((index + 1) / questions.length) * 100}%`;
                questionText.textContent = question.question;
                optionsContainer.innerHTML = "";

                if (!question.options || question.options.length === 0) {
                    const noOptionsDiv = document.createElement("div");
                    noOptionsDiv.className = "p-4 bg-yellow-50 text-yellow-800 rounded";
                    noOptionsDiv.textContent = "No options available for this question.";
                    optionsContainer.appendChild(noOptionsDiv);
                    return;
                }

                question.options.forEach((option, i) => {
                    const optionDiv = document.createElement("div");
                    optionDiv.className = "option-label flex items-center p-3 border border-gray-200 rounded hover:border-primary";

                    if (userAnswers[index] === i) {
                        optionDiv.classList.add("bg-primary/10", "border-primary");
                    }

                    optionDiv.innerHTML = `
                        <input type="radio" id="option-${i}" name="option" value="${i}" ${userAnswers[index] === i ? "checked" : ""}>
                        <span class="custom-radio"></span>
                        <label for="option-${i}" class="flex-grow cursor-pointer">${option}</label>
                    `;

                    optionDiv.addEventListener("click", function () {
                        const radio = this.querySelector('input[type="radio"]');
                        radio.checked = true;
                        document.querySelectorAll(".option-label").forEach((el) => {
                            el.classList.remove("bg-primary/10", "border-primary");
                        });
                        this.classList.add("bg-primary/10", "border-primary");
                    });

                    optionsContainer.appendChild(optionDiv);
                });

                prevBtn.style.display = index > 0 ? "block" : "none";
                nextBtn.textContent = index === questions.length - 1 ? "Submit Quiz" : "Next Question";
            }

            function calculateScore() {
                // For demonstration purposes, we'll use a random score
                // In a real application, you would compare with correct answers
                // Since we don't have correct answers in the database yet

                // Option 1: Random score for demonstration
                return Math.floor(Math.random() * 101);
            }

            function submitQuiz() {
                const score = calculateScore();

                // Create form data to submit
                const formData = new FormData();
                formData.append('CompetitionId', competitionId);
                formData.append('Name', userName);
                formData.append('Email', userEmail);
                formData.append('Score', score);

                // Submit the form using fetch
                fetch('/Competition/SubmitQuiz', {
                    method: 'POST',
                    body: formData
                })
                .then(response => {
                    // Show results regardless of response
                    showResults(score);
                })
                .catch(error => {
                    console.error('Error submitting quiz:', error);
                    // Show results anyway
                    showResults(score);
                });
            }

            function showResults(score) {
                quizContainer.style.display = "none";
                resultsContainer.style.display = "block";
                userScore.textContent = `${score}%`;

                // Mock leaderboard data
                const leaderboard = [
                    { name: "Emma Thompson", score: 90 },
                    { name: "Michael Chen", score: 80 },
                    { name: "Sophia Rodriguez", score: 70 },
                ];

                // Add user to leaderboard
                const userEntry = { name: userName, score: score };
                leaderboard.push(userEntry);

                // Sort leaderboard
                leaderboard.sort((a, b) => b.score - a.score);

                // Get user rank
                const userRankIndex = leaderboard.findIndex((entry) => entry.name === userName);

                // Display rank message
                if (userRankIndex === 0) {
                    resultMessage.textContent = "Congratulations! You took 1st place!";
                    userRank.textContent = "You are the champion!";
                } else if (userRankIndex === 1) {
                    resultMessage.textContent = "Well done! You took 2nd place!";
                    userRank.textContent = "Silver medal winner!";
                } else if (userRankIndex === 2) {
                    resultMessage.textContent = "Good job! You took 3rd place!";
                    userRank.textContent = "Bronze medal winner!";
                } else if (userRankIndex > 2) {
                    resultMessage.textContent = "Thanks for participating!";
                    userRank.textContent = `Your rank: ${userRankIndex + 1}th place`;
                }

                // Display top 3 in leaderboard
                leaderboardContainer.innerHTML = "";
                for (let i = 0; i < Math.min(3, leaderboard.length); i++) {
                    const entry = leaderboard[i];
                    const medalClass = i === 0 ? "gold" : i === 1 ? "silver" : "bronze";
                    const leaderboardEntry = document.createElement("div");
                    leaderboardEntry.className = `flex items-center p-4 bg-white rounded-lg shadow-sm ${entry.name === userName ? "border-2 border-primary" : "border border-gray-200"}`;
                    leaderboardEntry.innerHTML = `
                        <div class="medal ${medalClass} mr-4">${i + 1}</div>
                        <div class="flex-grow">
                            <h4 class="font-semibold text-gray-800">${entry.name}</h4>
                            <p class="text-sm text-gray-600">Score: ${entry.score}%</p>
                        </div>
                    `;
                    leaderboardContainer.appendChild(leaderboardEntry);
                }
            }

            function resetQuiz() {
                currentQuestion = 0;
                userAnswers = Array(questions.length).fill(null);
                document.getElementById("name").value = "";
                document.getElementById("email").value = "";
                nextBtn.textContent = "Next Question";
            }
        });
    </script>
}