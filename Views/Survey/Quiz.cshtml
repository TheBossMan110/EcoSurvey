@{
    ViewData["Title"] = ViewBag.Survey?.Title ?? "Survey";
    var survey = ViewBag.Survey as EcoSurvey.Models.Survey;
    var questions = ViewBag.Questions as List<EcoSurvey.Models.Question>;
}

<main class="container mx-auto px-4 py-8 mt-16 mb-16 min-h-screen">
    <div class="max-w-3xl mx-auto bg-white rounded-lg shadow-sm p-6 md:p-8">
        @if (questions == null || !questions.Any())
        {
            <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-6">
                <div class="flex">
                    <div class="flex-shrink-0">
                        <i class="ri-error-warning-line text-yellow-400"></i>
                    </div>
                    <div class="ml-3">
                        <p class="text-sm text-yellow-700">
                            This survey does not have any questions yet.
                        </p>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div id="quiz-container">
                <div class="mb-6">
                    <div class="text-2xl font-bold text-gray-800 mb-2">
                        @survey.Title
                    </div>
                    <p class="text-gray-600">
                        @survey.Description
                    </p>
                    <div class="mt-3 flex items-center text-sm text-gray-500">
                        <div class="flex items-center mr-4">
                            <i class="ri-time-line mr-1"></i>
                            <span>@survey.EstimatedCompletionTime min</span>
                        </div>
                        <div class="flex items-center">
                            <i class="ri-calendar-line mr-1"></i>
                            <span>Ends: @survey.EndDate.ToString("MMM d, yyyy")</span>
                        </div>
                    </div>
                </div>

                <form id="quiz-form" method="post" action="@Url.Action("SubmitQuiz", "Survey")" class="space-y-6">
                    <input type="hidden" name="surveyId" value="@survey.SurveyId" />
                    @Html.AntiForgeryToken()

                    <div class="space-y-6">
                        @foreach (var question in questions)
                        {
                            <div class="question-container p-4 border border-gray-200 rounded-lg">
                                <p class="font-medium text-gray-800 mb-3">
                                    @(questions.IndexOf(question) + 1). @question.QuestionText
                                    @if (question.IsRequired)
                                    {
                                        <span class="text-red-500">*</span>
                                    }
                                </p>

                                @if (question.QuestionType == 1) // Text
                                {
                                    <div>
                                        <input type="text"
                                               name="question_@(question.QuestionId)"
                                               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent"
                                        @(question.IsRequired ? "required" : "") />
                                    </div>
                                }
                                else if (question.QuestionType == 2) // Single Choice
                                {
                                    <div class="space-y-2">
                                        @{
                                            var options = !string.IsNullOrEmpty(question.Options)
                                            ? System.Text.Json.JsonSerializer.Deserialize<List<string>>(question.Options)
                                            : new List<string>();

                                            foreach (var option in options)
                                            {
                                                var optionValue = options.IndexOf(option).ToString();
                                                <label class="flex items-center custom-radio">
                                                    <input type="radio"
                                                           name="question_@(question.QuestionId)"
                                                           value="@optionValue"
                                                    @(question.IsRequired ? "required" : "") />
                                                    <span class="radio-mark mr-2"></span>
                                                    <span>@option</span>
                                                </label>
                                            }
                                        }
                                    </div>
                                }
                                else if (question.QuestionType == 3) // Multiple Choice
                                {
                                    <div class="space-y-2">
                                        @{
                                            var options = !string.IsNullOrEmpty(question.Options)
                                            ? System.Text.Json.JsonSerializer.Deserialize<List<string>>(question.Options)
                                            : new List<string>();

                                            foreach (var option in options)
                                            {
                                                var optionValue = options.IndexOf(option).ToString();
                                                <label class="flex items-center custom-checkbox">
                                                    <input type="checkbox"
                                                           name="question_@(question.QuestionId)_@optionValue"
                                                           value="@optionValue" />
                                                    <span class="checkmark mr-2"></span>
                                                    <span>@option</span>
                                                </label>
                                            }
                                        }
                                    </div>
                                }
                                else if (question.QuestionType == 4) // Rating
                                {
                                    <div class="flex items-center space-x-2">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            <label class="rating-item">
                                                <input type="radio"
                                                       name="question_@(question.QuestionId)"
                                                       value="@i"
                                                @(question.IsRequired ? "required" : "") />
                                                <span class="rating-number">@i</span>
                                            </label>
                                        }
                                    </div>
                                }
                            </div>
                        }

                        <button type="submit" class="w-full px-6 py-3 bg-primary text-white rounded-button hover:bg-primary/90 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2">
                            Submit Survey
                        </button>
                    </div>
                </form>
            </div>
        }
    </div>
</main>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Add styling for rating items when selected
            const ratingItems = document.querySelectorAll('.rating-item input');
            ratingItems.forEach(input => {
                input.addEventListener('change', function() {
                    // Find all rating items in this question
                    const questionContainer = this.closest('.question-container');
                    const allRatingInputs = questionContainer.querySelectorAll('.rating-item input');
                    const allRatingItems = questionContainer.querySelectorAll('.rating-item');

                    // Reset all
                    allRatingItems.forEach(item => {
                        item.classList.remove('bg-primary', 'border-primary');
                        item.querySelector('.rating-number').classList.remove('text-white');
                    });

                    // Get the selected value
                    const selectedValue = parseInt(this.value);

                    // Highlight the selected item
                    const selectedItem = this.closest('.rating-item');
                    selectedItem.classList.add('bg-primary', 'border-primary');
                    selectedItem.querySelector('.rating-number').classList.add('text-white');
                });
            });

            // Form validation
            const quizForm = document.getElementById('quiz-form');
            if (quizForm) {
                quizForm.addEventListener('submit', function(e) {
                    const requiredInputs = quizForm.querySelectorAll('input[required]');
                    let allFilled = true;

                    requiredInputs.forEach(input => {
                        if (input.type === 'radio') {
                            // For radio buttons, check if any in the group is checked
                            const name = input.name;
                            const radioGroup = quizForm.querySelectorAll(`input[name="${name}"]`);
                            const isChecked = Array.from(radioGroup).some(radio => radio.checked);

                            if (!isChecked) {
                                allFilled = false;
                                // Highlight the question container
                                const questionContainer = input.closest('.question-container');
                                questionContainer.classList.add('border-red-500');
                            }
                        } else if (input.value.trim() === '') {
                            allFilled = false;
                            // Highlight the question container
                            const questionContainer = input.closest('.question-container');
                            questionContainer.classList.add('border-red-500');
                        }
                    });

                    if (!allFilled) {
                        e.preventDefault();
                        alert('Please answer all required questions.');
                    }
                });
            }
        });
    </script>
}